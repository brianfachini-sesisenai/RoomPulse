# Inicio.py (vers√£o com painel de admin)
import streamlit as st
import auth 

# --- CONFIGURA√á√ïES DA P√ÅGINA ---
st.set_page_config(
    page_title="Room App",
    page_icon="üè®",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# --- INICIALIZA√á√ÉO DO ESTADO DA SESS√ÉO ---
if "authenticated" not in st.session_state:
    st.session_state.authenticated = False
if "view" not in st.session_state:
    st.session_state.view = "login"

# --- FUN√á√ïES DE TELA (VIEWS) ---

def tela_login():
    """Renderiza a tela de login."""
    st.header("üîê Login")
    with st.form("login_form"):
        username = st.text_input("Usu√°rio")
        password = st.text_input("Senha", type="password")
        submitted = st.form_submit_button("Entrar", type="primary")

        if submitted:
            if auth.verificar_login(username, password):
                st.session_state.authenticated = True
                st.session_state.username = username
                st.rerun()
            else:
                st.error("Usu√°rio ou senha incorretos.")
    
    if st.button("Ainda n√£o tem conta? Cadastre-se aqui"):
        st.session_state.view = "cadastro"
        st.rerun()

def tela_cadastro():
    """Renderiza a tela de cadastro."""
    st.header("üìù Cadastro de Usu√°rio")
    with st.form("cadastro_form"):
        novo_usuario = st.text_input("Escolha um nome de usu√°rio")
        nova_senha = st.text_input("Escolha uma senha", type="password")
        submitted = st.form_submit_button("Cadastrar", type="primary")

        if submitted:
            resultado = auth.registrar_novo_usuario(novo_usuario, nova_senha)
            if resultado.startswith("Sucesso"):
                st.success(resultado + " Agora voc√™ pode fazer o login.")
                st.session_state.view = "login"
                st.rerun()
            else:
                st.error(resultado)

    if st.button("üîô Voltar ao Login"):
        st.session_state.view = "login"
        st.rerun()

# --- CONTROLE PRINCIPAL ---

if not st.session_state.authenticated:
    st.title("üè® Bem-vindo ao Room App")
    if st.session_state.view == "login":
        tela_login()
    else:
        tela_cadastro()
else:
    # --- INTERFACE PRINCIPAL AP√ìS LOGIN ---
    st.title(f"üè® Room App")
    st.sidebar.success(f"Logado como: {st.session_state.username}")

    # --- NOVA SE√á√ÉO DO PAINEL ADMIN ---
    # Este bloco s√≥ aparece se o usu√°rio logado for 'admin'
    if st.session_state.get("username") == "admin":
        st.sidebar.divider()
        st.sidebar.header("Painel do Admin")

        # Bot√£o para ativar a visualiza√ß√£o de usu√°rios
        if st.sidebar.button("Ver Todos os Usu√°rios"):
            st.session_state.admin_view = "view_users"
        
        # Bot√£o para voltar √† visualiza√ß√£o normal
        if st.sidebar.button("Ocultar Lista de Usu√°rios"):
            # Deleta a vari√°vel de estado para voltar ao normal
            if "admin_view" in st.session_state:
                del st.session_state.admin_view
            st.rerun()

    # --- CONTE√öDO DA P√ÅGINA PRINCIPAL ---
    # Verifica se a visualiza√ß√£o de admin est√° ativa
    if st.session_state.get("admin_view") == "view_users":
        st.subheader("üë®‚Äçüíº Lista de Todos os Usu√°rios")
        try:
            conn = auth.get_db_connection()
            # Busca todos os usu√°rios, exceto o pr√≥prio admin, ordenados por data de cria√ß√£o
            todos_usuarios = conn.query("SELECT username, criado_em FROM usuarios WHERE username != 'admin' ORDER BY criado_em DESC;", ttl=0)
            st.dataframe(todos_usuarios, use_container_width=True)
        except Exception as e:
            st.error(f"N√£o foi poss√≠vel carregar os usu√°rios: {e}")
    else:
        # Mensagem padr√£o para todos os usu√°rios (incluindo o admin quando n√£o est√° vendo a lista)
        st.write("### Selecione uma op√ß√£o na barra lateral para come√ßar.")

    # Bot√£o de Logout na sidebar (sempre vis√≠vel para quem est√° logado)
    st.sidebar.divider()
    if st.sidebar.button("Sair da Conta"):
        for key in st.session_state.keys():
            del st.session_state[key]
        st.rerun()
